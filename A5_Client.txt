import socket
import hashlib

def generate_hash(message):
    # Initialize variables (like hash states in SHA-1)
    hash_value = 0

    # Process each character in the message
    for char in message:
        # Convert character to Unicode integer
        char_code = ord(char)
        
        # Simple bitwise operations to simulate "mixing" data
        hash_value = (hash_value * 31 + char_code) & 0xFFFFFFFF  # Mod 2^32 to keep it in 32 bits
        hash_value ^= (hash_value >> 16)  # XOR with shifted value to increase diffusion

    # Convert to hexadecimal representation
    return hex(hash_value)[2:].zfill(8)  # Pads to ensure 8 characters

# Client configuration
server_host = 'localhost'  # Server's hostname or IP address
server_port = 12345        # Server's port number

# Create the client socket and connect to the server
client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client_socket.connect((server_host, server_port))

# Message to send
message = "Hello, this is a secure message."
hash_value = generate_hash(message)
payload = f"{message}|{hash_value}"  # Combine message and hash

# Send the combined payload
client_socket.sendall(payload.encode())
print("Message and hash sent to the server.")

# Close the connection
client_socket.close()
